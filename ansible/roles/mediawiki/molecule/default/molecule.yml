---
dependency:
  name: galaxy
  options:
    requirements-file: requirements.yml
    ignore-certs: True
    ignore-errors: True
    role-file: requirements.yml
lint: |
  set -e
  yamllint .
  ansible-lint .
driver:
  name: docker
  provider:
    name: docker
  inventory:
    host_vars:
      # setting for the platform instance named 'instance'
      molecule-ubuntu22-04:
        ansible_user: root
      molecule-ubuntu24-04:
        ansible_user: root
  options:
    managed: False
    login_cmd_template: 'docker exec -ti {instance} bash'
    ansible_connection_options:
      ansible_connection: docker
platforms:
  - name: molecule-ubuntu22-04
    hostname: test_dst_netbox_dind_${MOLECULE_SCENARIO_NAME}
    image: ubuntu:22.04
    dockerfile: Dockerfile.j2
    networks:
      - name: dind-network
    pre_build_image: false
    privileged: true
    # override_command: false
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    systemd: always
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
      - "/var/run/docker.sock:/tmp/docker.sock"
  - name: molecule-ubuntu24-04
    image: ubuntu:24.04
    pre_build_image: false
    networks:
      - name: dind-network
    privileged: true
    systemd: always
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
      - "/var/run/docker.sock:/tmp/docker.sock"
provisioner:
  name: ansible
  options:
    vvv: True
  config_options:
    defaults:
      vault_password_file: ~/vault.pw
      ansible_python_interpreter: /usr/bin/python
      remote_tmp: /tmp
scenario:
  name: default
  create_sequence:
    - create
    - prepare
  check_sequence:
    - destroy
    - dependency
    - create
verifier:
  name: testinfra
  directory: tests
